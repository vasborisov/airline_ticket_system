@model Airline_Ticket_System.Models.Booking.BookSeatViewModel
@{
    var isUser = User.IsInRole("User");
}

<h2>Book Seat</h2>

<div class="card mb-3">
    <div class="card-body">
        <h5 class="card-title">@Model.DepartureCity → @Model.ArrivalCity</h5>
        <p><strong>Duration:</strong> @Model.Duration minutes</p>
        <p><strong>Price:</strong> @Model.Price.ToString("C", System.Globalization.CultureInfo.GetCultureInfo("fr-FR"))</p>
    </div>
</div>
<form asp-action="Create" method="post">
    @Html.ValidationSummary(true, "", new { @class = "alert alert-danger" })
    <input type="hidden" asp-for="FlightId" />
    @if(isUser)
    {
        <div class="form-check mb-2">
            <input class="form-check-input" type="checkbox" asp-for="IsBookingForSelf" id="isBookingForSelf" onchange="handleBookingMode()" />
            <label class="form-check-label" for="isBookingForSelf">Booking for myself</label>
        </div>
    }
    

    <div class="form-group" id="create-new-toggle">
        <label>
            <input type="checkbox" asp-for="CreateNewPassenger" id="createNewPassenger" onchange="togglePassengerFields()" />
            Create New Passenger
        </label>
    </div>

    @if (!isUser)
    {
        <div id="existing-passenger-fields" class="form-group">
            <label>Select Existing Passenger</label>
            <select asp-for="SelectedPassengerId" class="form-control" asp-items="Model.ExistingPassengers">
                <option value="">-- Select Passenger --</option>
            </select>
        </div>
    }

    <div id="new-passenger-fields" style="display:none;">
        <div class="form-group">
            <label asp-for="FirstName"></label>
            <input asp-for="FirstName" class="form-control" />
        </div>
        <div class="form-group">
            <label asp-for="FamilyName"></label>
            <input asp-for="FamilyName" class="form-control" />
        </div>
    </div>

    <button type="submit" class="btn btn-primary">Book Seat</button>
    <a asp-action="Index" asp-controller="Flight" class="btn btn-secondary">
        <i class="fas fa-list"></i>Cancel
    </a>
</form>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        function togglePassengerFields() {
                const createNew = document.getElementById("createNewPassenger").checked;
                document.getElementById("existing-passenger-fields").style.display = createNew ? "none" : "block";
                document.getElementById("new-passenger-fields").style.display = createNew ? "block" : "none";
                if (createNew) { 
                    clearPassengerFields();
                }
        }

        function handleBookingMode() {
            const isSelf = document.getElementById("isBookingForSelf").checked;
            const toggleDiv = document.getElementById("create-new-toggle");
            toggleDiv.style.display = isSelf ? "none" : "block";

            if (isSelf) {
                // force uncheck createNewPassenger and hide all manual fields
                document.getElementById("createNewPassenger").checked = false;
                document.getElementById("new-passenger-fields").style.display = "block";
            }

            togglePassengerFields();
        }

        function clearPassengerFields() {
            const select = document.getElementById("SelectedPassengerId");
            if (select) {
                select.selectedIndex = 0; // or set to -1 to fully clear selection
            }
        }

        document.addEventListener("DOMContentLoaded", function () {
            togglePassengerFields();
            handleBookingMode();
        });
   
    </script>
}

